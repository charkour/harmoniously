import { Assignments } from "./interfaces";

// TODO: move this to tests once logic is mostly done.
export const mathStatOnlyRooms = ["nh251", "nh259", "nh276", "nh261", "nh295"];
export const csOnlyRooms = ["sb372", "nh253", "sb010", "sb382", "hh336", "hh334", "sc203"];
// NOTE: it fails to find a solution when there are is not an extra room.
export const both = ["nh064", "a"];
export const csLabRooms = ["sb337", "sb354"];
export const bioRooms = ["sb256", "sb276", "cfaud", "hc300", "sb103"];
export const bioLabRooms = ["sb277", "dh132", "dh106", "dh124", "sb210"];

export const csRooms = [...csOnlyRooms, ...both];
export const mathStatRooms = [...mathStatOnlyRooms, ...both];

export const rooms = [
  ...mathStatOnlyRooms,
  ...csOnlyRooms,
  ...both,
  ...csLabRooms,
  ...bioRooms,
  ...bioLabRooms,
];

export const times = [
  "mwf800",
  "mwf900",
  "mwf1030",
  "mwf1130",
  "mwf1230",
  "mwf130",
  "mwf230",
  "tth830",
  "tth1030",
];

// TODO: make professor field an array.
// TODO: add more fields to ClassLimits that are appropriate.
export const userConstraints: Assignments = {
  cs100a: { times, professor: "meyer", rooms: csRooms },
  cs104a: { times, professor: "schuurman", rooms: csRooms },
  cs104b: { times, professor: "schuurman", rooms: csRooms },
  cs104c: { times, professor: "schuurman", rooms: csRooms },
  lcs104a: { times, professor: "sykes", rooms: csLabRooms },
  lcs104b: { times, professor: "schuurman", rooms: csLabRooms },
  lcs104c: { times, professor: "sykes", rooms: csLabRooms },
  lcs104d: { times, professor: "schuurman", rooms: csLabRooms },
  lcs104e: { times, professor: "sykes", rooms: csLabRooms },
  cs106a: { times, professor: "norman", rooms: csRooms },
  lcs106a: { times, professor: "norman", rooms: csLabRooms },
  cs108a: { times, professor: "vanderlinden", rooms: csRooms },
  cs108b: { times, professor: "arnold", rooms: csRooms },
  lcs108a: { times, professor: "wieringa", rooms: csLabRooms },
  lcs108b: { times, professor: "arnold", rooms: csLabRooms },
  cs112a: { times, professor: "adams", rooms: csRooms },
  cs112b: { times, professor: "adams", rooms: csRooms },
  lcs112a: { times, professor: "norman", rooms: csLabRooms },
  lcs112b: { times, professor: "wieringa", rooms: csLabRooms },
  cs195a: { times, professor: "norman", rooms: csRooms },
  cs212a: { times, professor: "plantinga", rooms: csRooms },
  cs212b: { times, professor: "plantinga", rooms: csRooms },
  cs214a: { times, professor: "adams", rooms: csRooms },
  cs214b: { times, professor: "adams", rooms: csRooms },
  lcs214a: { times, professor: "meyer", rooms: csLabRooms },
  lcs214b: { times, professor: "meyer", rooms: csLabRooms },
  cs232a: { times, professor: "norman", rooms: csRooms },
  cs232b: { times, professor: "norman", rooms: csRooms },
  cs262a: { times, professor: "vanderlinden", rooms: csRooms },
  cs262b: { times, professor: "vanderlinden", rooms: csRooms },
  lcs262a: { times, professor: "vanderlinden", rooms: csLabRooms },
  lcs262b: { times, professor: "vanderlinden", rooms: csLabRooms },
  cs295a: { times, professor: "norman", rooms: csRooms },
  cs300a: { times, professor: "schuurman", rooms: csRooms },
  lcs300a: { times, professor: "schuurman", rooms: csLabRooms },
  cs332a: { times, professor: "norman", rooms: csRooms },
  cs336a: { times, professor: "norman", rooms: csRooms },
  cs342a: { times, professor: "bailey", rooms: csRooms },
  cs344a: { times, professor: "vanderlinden", rooms: csRooms },
  cs364a: { times, professor: "vedra", rooms: csRooms },
  cs374a: { times, professor: "adams", rooms: csRooms },
  cs383a: { times, professor: "bailey", rooms: csRooms },
  cs384a: { times, professor: "schuurman", rooms: csRooms },
  cs384b: { times, professor: "schuurman", rooms: csRooms },
  // # NOTE: skip cs390
  cs394: { times, professor: "bailey", rooms: csRooms },
  // # NOTE: skip cs 396/8 and CS-W60
  data101a: { times, professor: "bailey", rooms: csRooms },
  data101b: { times, professor: "bailey", rooms: csRooms },
  data175a: { times, professor: "brendavanderlinden", rooms: csRooms },
  data175b: { times, professor: "brendavanderlinden", rooms: csRooms },
  data175c: { times, professor: "momeyer", rooms: csRooms },
  data202a: { times, professor: "arnold", rooms: csRooms },
  data303: { times, professor: "arnold", rooms: csRooms },
  data383: { times, professor: "bailey", rooms: csRooms },
  idis110a: { times, professor: "bobeldyk", rooms: csRooms },
  math100a: { times, professor: "turner", rooms: mathStatRooms },
  math132a: { times, professor: "bolt", rooms: mathStatRooms },
  math169a: { times, professor: "ferdinands", rooms: mathStatRooms },
  math170a: { times, professor: "ferdinands", rooms: mathStatRooms },
  math171a: { times, professor: "bolt", rooms: mathStatRooms },
  math171b: { times, professor: "bolt", rooms: mathStatRooms },
  math171c: { times, professor: "moseley", rooms: mathStatRooms },
  math171d: { times, professor: "moseley", rooms: mathStatRooms },
  math172a: { times, professor: "sunukjian", rooms: mathStatRooms },
  math172b: { times, professor: "scofield", rooms: mathStatRooms },
  math172c: { times, professor: "kapitula", rooms: mathStatRooms },
  math190a: { times, professor: "scofield", rooms: mathStatRooms },
  math221a: { times, professor: "klanderman", rooms: mathStatRooms },
  math222a: { times, professor: "talsma", rooms: mathStatRooms },
  math231a: { times, professor: "scofield", rooms: mathStatRooms },
  math231b: { times, professor: "kapitula", rooms: mathStatRooms },
  math231c: { times, professor: "scofield", rooms: mathStatRooms },
  math251a: { times, professor: "scofield", rooms: mathStatRooms },
  math251b: { times, professor: "scofield", rooms: mathStatRooms },
  math252a: { times, professor: "pruim", rooms: mathStatRooms },
  math252b: { times, professor: "pruim", rooms: mathStatRooms },
  math255a: { times, professor: "moseley", rooms: mathStatRooms },
  math270a: { times, professor: "ferdinands", rooms: mathStatRooms },
  math271a: { times, professor: "ferdinands", rooms: mathStatRooms },
  math270b: { times, professor: "bolt", rooms: mathStatRooms },
  math271b: { times, professor: "bolt", rooms: mathStatRooms },
  math270c: { times, professor: "kapitula", rooms: mathStatRooms },
  math271c: { times, professor: "kapitula", rooms: mathStatRooms },
  math301a: { times, professor: "turner", rooms: mathStatRooms },
  math305a: { times, professor: "moseley", rooms: mathStatRooms },
  math323a: { times, professor: "genzink", rooms: mathStatRooms },
  math327a: { times, professor: "klanderman", rooms: mathStatRooms },
  math331a: { times, professor: "kapitula", rooms: mathStatRooms },
  math351a: { times, professor: "ferdinands", rooms: mathStatRooms },
  math355a: { times, professor: "kapitula", rooms: mathStatRooms },
  math359a: { times, professor: "klanderman", rooms: mathStatRooms },
  math361a: { times, professor: "ferdinands", rooms: mathStatRooms },
  math390a: { times, professor: "moseley", rooms: mathStatRooms },
  math391a: { times, professor: "moseley", rooms: mathStatRooms },
  math395a: { times, professor: "klanderman", rooms: mathStatRooms },
  mathw81a: { times, professor: "moseley", rooms: mathStatRooms },
  mathw82a: { times, professor: "pruim", rooms: mathStatRooms },
  stat143a: { times, professor: "pamplantinga", rooms: mathStatRooms },
  stat143b: { times, professor: "pamplantinga", rooms: mathStatRooms },
  stat143c: { times, professor: "barbaraadams", rooms: mathStatRooms },
  stat143d: { times, professor: "barbaraadams", rooms: mathStatRooms },
  stat143e: { times, professor: "talsma", rooms: mathStatRooms },
  stat145a: { times, professor: "scofield", rooms: mathStatRooms },
  stat241a: { times, professor: "jager", rooms: mathStatRooms },
  stat241b: { times, professor: "jager", rooms: mathStatRooms },
  stat241c: { times, professor: "jager", rooms: mathStatRooms },
  stat243a: { times, professor: "deruiter", rooms: mathStatRooms },
  stat245a: { times, professor: "deruiter", rooms: mathStatRooms },
  stat343a: { times, professor: "pruim", rooms: mathStatRooms },
  stat344a: { times, professor: "deruiter", rooms: mathStatRooms },
  stat390a: { times, professor: "pruim", rooms: mathStatRooms },
  // // # TODO: add engineering classes and cognates
  // bio115a: "miller",
  // bio123a: "miller",
  // bio141a: "shen",
  // bio141b: "shen",
  // lbio141a: "shen",
  // lbio141b: "grasman",
  // lbio141c: "grasman",
  // lbio141d: "shen",
  // bio160a: "grasman",
  // bio160n: "wertz",
  // lbio160a: "grasman",
  // lbio160b: "dejong",
  // lbio160c: "dejong",
  // lbio160n: "wertz",
  // bio161a: "koetje",
  // lbio161a: "miller",
  // lbio161b: "miller",
  // bio205a: "bebej",
  // lbio205a: "bebej",
  // lbio205b: "bebej",
  // lbio205c: "bebej",
  // lbio205d: "bebej",
  // lbio205e: "barrett",
  // bio206a: "dubois",
  // bio206b: "barret",
  // lbio206a: "dubois",
  // lbio206b: "barret",
  // lbio206c: "dubois",
  // lbio206d: "boldenow",
  // bio207a: "wertz",
  // bio207b: "wertz",
  // lbio207a: "wertz",
  // lbio207b: "wertz",
  // lbio207c: "wertz",
  // lbio207d: "shen",
  // lbio207e: "shen",
  // lbio207f: "shen",
  // lbio207g: "keen",
  // lbio207h: "keen",
  // lbio207i: "keen",
  // bio230a: "dornbos",
  // lbio230a: "koetje",
  // lbio230b: "barrett",
  // lbio230c: "koetje",
  // bio250a: "miller",
  // bio250b: "dejong",
  // bio295a: "koetje",
  // bio321a: "wilstermann",
  // lbio321a: "wiltermann",
  // lbio321b: "wiltermann",
  // bio331a: "boldenow",
  // lbio331a: "boldenow",
  // lbio331b: "boldenow",
  // bio332a: "dornbos",
  // lbio332a: "dornbos",
  // bio333a: "shen",
  // lbio333a: "shen",
  // bio335a: "barrett",
  // lbio335a: "boldenow",
  // bio336a: "wertz",
  // lbio336a: "wertz",
  // bio338a: "miller",
  // lbio338a: "miller",
  // bio345a: "grasman",
  // lbio345a: "grasman",
  // bio346a: "warners",
  // lbio346a: "warners",
  // bio354a: "dornbos",
  // bio364a: "koetje",
  // bio395a: "bebej",
  // bio396a: "dubois",
};
